@import "./variables";
* {
    // 如果宽度过多，内容向内挤压
    box-sizing: border-box;
    outline: none;
}

html {
    font-size: 13px;
}

body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background-color: #f1f1f1;
}

a {
    color: #999;
}

// text-color
@each $colorKey,
$color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }
    .bg-#{$colorKey} {
        background-color: $color;
    }
}

// text
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var !important;
    }
}

.text-ellipsis {
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@each $sizeKey,
$size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}

.d-flex {
    display: flex;
}

.flex-column {
    flex-direction: column;
}

// 左边是固定的宽度，右边的内容会拉满
.flex-1 {
    flex: 1;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-grow-1 {
    flex-grow: 1;
}

@each $key,
$value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

// align-item:strecth  交叉轴上边等高
@each $key,
$value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

// spacing
//mt-1
//mt-1
@each $typeKey,
$type in $spacing-types {
    @each $directionKey,
    $direction in $spacing-directions {
        @each $sizeKey,
        $size in $spacing-sizes {
            .#{$typeKey}#{$directionKey}-#{$sizeKey} {
                #{$type}-#{$direction}: $size * $spacing-base-size;
            }
        }
    }
}

//m-1
@each $typeKey,
$type in $spacing-types {
    @each $sizeKey,
    $size in $spacing-sizes {
        .#{$typeKey}-#{$sizeKey} {
            #{$type}: $size * $spacing-base-size;
        }
    }
}

//mx-1
@each $typeKey,
$type in $spacing-types {
    @each $sizeKey,
    $size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey} {
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size;
        }
        .#{$typeKey}y-#{$sizeKey} {
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size;
        }
    }
}

// button
.btn {
    border: none;
    border-radius: 0.1538rem;
    font-size: map-get($font-sizes, "sm") * $base-font-size;
    -webkit-font-smoothing: antialiased;
    padding: 0.2rem 0.5rem;
}

.nav {
    display: flex;
    .nav-item {
        border-bottom: 3px solid transparent;
        color: map-get($colors, "primary");
        padding-bottom: 0.3rem;
        &.active {
            border-bottom: 3px solid map-get($colors, "primary");
        }
    }
    &.nav-inverse {
        .nav-item {
            color: white;
            &.active {
                border-bottom: 3px solid white;
            }
        }
    }
}

.w-100 {
    width: 100%;
}

.h-100 {
    height: 100%;
}